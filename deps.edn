{:paths ["src" "resources"]
 :deps  {io.pedestal/pedestal.service      {:mvn/version "0.5.7"}
         io.pedestal/pedestal.route        {:mvn/version "0.5.7"}
         io.pedestal/pedestal.jetty        {:mvn/version "0.5.7"}
         com.brunobonacci/mulog            {:mvn/version "0.9.0"}
         metosin/malli                     {:mvn/version "0.13.0"}
         com.github.seancorfield/honeysql  {:mvn/version "2.4.1066"}
         com.github.seancorfield/next.jdbc {:mvn/version "1.3.894"}
         org.postgresql/postgresql         {:mvn/version "42.6.0"}
         integrant/integrant               {:mvn/version "0.8.1"}
         aero/aero                         {:mvn/version "1.1.6"}
         org.clojure/clojure               {:mvn/version "1.11.1"}
         integrant/repl                    {:mvn/version "0.3.3"}
         migratus/migratus                 {:mvn/version "1.5.3"}
         io.nats/jnats                     {:mvn/version "2.17.6"}
         org.slf4j/slf4j-log4j12           {:mvn/version "1.6.3"}
         org.clojure/data.json             {:mvn/version "2.4.0"}
         org.clojure/tools.logging         {:mvn/version "1.2.4"}
         medley/medley                     {:mvn/version "1.4.0"}
         hato/hato             {:mvn/version "0.9.0"}
         clj-http/clj-http                 {:mvn/version "3.12.3"}}

 :aliases
 {:dev      {:extra-paths ["dev"]
             :extra-deps  {hato/hato                     {:mvn/version "0.9.0"}
                           io.github.clojure/tools.build {:mvn/version "0.9.4"}
                           djblue/portal                 {:mvn/version "0.48.0"}}}
  :run-m    {:main-opts ["-m" "mba-fiap.lanchonete" "prod"]}
  ;;clj -T:build test s√≥ rodar testes
  ;;clj -T:build ci :bdd true ;; rodar cucumber

  :build    {:deps       {fundingcircle/jukebox         {:mvn/version "1.0.6"}
                          io.github.clojure/tools.build {:mvn/version "0.9.4"}}
             :ns-default build}
  :cucumber {:extra-paths ["target/classes" "test" "resources" "dev"]
             :description "Execute scenarios with the cucumber runner."
             :usage       ["Usage: clj -A:cucumber [options] <features dir>"
                           ""
                           "Options:"
                           "  -h, --help        Additional cucumber help."
                           "  -t, --tags <tags> Only run scenarios with matching tags."]
             :main-opts   ["-m" "fundingcircle.jukebox.alias.cucumber"]
             :exec-fn     mba-fiap.bdd-test/run-cucumber
             :exec-args   {}
             :extra-deps  {hato/hato             {:mvn/version "0.9.0"}
                           fundingcircle/jukebox {:mvn/version "1.0.6"}}}
  :snippets {:description "Generate code snippets for scenarios."
             :usage       ["Usage: clj -A:jukebox/snippets <features dir>"]
             :main-opts   ["-m" "fundingcircle.jukebox.alias.snippets" "--glue" "regenerate-snippets"]
             :extra-deps  {fundingcircle/jukebox {:mvn/version "1.0.6"}}}
  ;;clj -X:test rodar teste com coverage
  :test     {:extra-paths ["test" "resources"]
             :extra-deps  {org.clojure/test.check                  {:mvn/version "1.1.1"}
                           eftest/eftest                           {:mvn/version "0.5.9"}
                           fundingcircle/jukebox                   {:mvn/version "1.0.6"}
                           clj-test-containers/clj-test-containers {:mvn/version "0.7.4"}
                           hato/hato                               {:mvn/version "0.9.0"}
                           cloverage/cloverage                     {:mvn/version "1.2.2"}}
             :exec-fn     cloverage.coverage/run-project
             :exec-args   {:test-ns-path ["test"]
                           :src-ns-path  ["src"]
                           :runner       :eftest
                           :runner-opts  {:fail-fast? true}}}}}
